plugins {
    id 'java'
    id "me.champeau.jmh" version "0.7.3"
    id "net.kyori.blossom" version "2.1.0"
    id "com.gradleup.shadow" version "9.0.1"
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.9"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "codemc"
        url = "https://repo.codemc.io/repository/maven-releases/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "libby-repo"
        url = "https://repo.alessiodp.com/snapshots"
    }
    maven {
        name = "helpchat-repo"
        url = "https://repo.helpch.at/releases"
    }
    maven {
        name = "redempt.dev"
        url = "https://redempt.dev"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

def imperatVersion = "1.9.6"
dependencies {
    // api ->
    implementation project(":api")

    //adventure ->
    implementation "${kyori(KyoriModule.MINI_MESSAGE)}"
    implementation "${kyori(KyoriModule.GSON_SERIALIZER)}"
    
    implementation "${kyoriPlatform(KyoriModule.BUKKIT)}"
    implementation "${kyoriPlatform(KyoriModule.BUNGEE_SERIALIZER)}"

    // imperat ->
    implementation "dev.velix:imperat-core:${imperatVersion}"
    implementation "dev.velix:imperat-bukkit:${imperatVersion}"

    // other ->
    implementation "org.bstats:bstats-bukkit:3.0.2"
    implementation "com.github.Redempt:Crunch:2.0.3"
    implementation "com.github.technicallycoded:FoliaLib:0.4.3"
    implementation "com.alessiodp.libby:libby-bukkit:2.0.0-SNAPSHOT"

    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    compileOnly "com.github.retrooper:packetevents-spigot:2.9.4"
    compileOnly "net.dmulloy2:ProtocolLib:5.4.0"
    compileOnly "me.clip:placeholderapi:2.11.6"
    
    testImplementation("io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT")
    testImplementation("${kyori(KyoriModule.MINI_MESSAGE)}")
    testImplementation("${kyoriPlatform(KyoriModule.BUKKIT)}")

    testImplementation(platform('org.junit:junit-bom:5.13.4'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = '17'
    targetCompatibility = '17'
    options.encoding = "UTF-8"
    options.compilerArgs += ["-parameters"]
}

tasks.named('shadowJar') {
    dependsOn tasks.named('test')
}

test {
    useJUnitPlatform()
    testLogging {
		events "passed", "skipped", "failed"
	}
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

def shadePath = "to.itsme.itsmyconfig.shade."
shadowJar {
    relocate("com.tcoded.folialib", "${shadePath}folialib")
    relocate("redempt.crunch", "${shadePath}crunch")
    relocate("org.bstats", "${shadePath}bstats")
    relocate("net.kyori", "${shadePath}kyori")
    relocate("com.alessiodp.libby", "${shadePath}libby")
    relocate("com.github.retrooper.packetevents", "${shadePath}packetevents")
	relocate("io.github.retrooper.packetevents", "${shadePath}iopacketevents")
    archiveFileName = "itsmyconfig-${project.version}.jar"
}

sourceSets {
    main {
        blossom {
            javaSources {
                property("shadePath", shadePath)
                property("adventureVersion", kyoriVersion)
                property("adventurePlatformVersion", kyoriPlatformVersion)
            }
        }
    }
}

jmh {
    fork = 0
    warmup = '1s'
    warmupIterations = 2
    timeOnIteration = '3s'
}
